function cov_nqdktuwv1(){var path="/Users/Au/bootcamp/collab/skylab-bootcamp-202001/staff/aurora-perez/pill-o-clock/pill-o-clock-api/logic/add-prescription.js";var hash="6cf0e681b963bc77f3d66c53ca66357dfb49eba4";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/Au/bootcamp/collab/skylab-bootcamp-202001/staff/aurora-perez/pill-o-clock/pill-o-clock-api/logic/add-prescription.js",statementMap:{"0":{start:{line:1,column:21},end:{line:1,column:50}},"1":{start:{line:2,column:46},end:{line:2,column:74}},"2":{start:{line:3,column:43},end:{line:3,column:73}},"3":{start:{line:19,column:0},end:{line:45,column:1}},"4":{start:{line:20,column:4},end:{line:20,column:29}},"5":{start:{line:21,column:4},end:{line:21,column:37}},"6":{start:{line:22,column:4},end:{line:22,column:39}},"7":{start:{line:23,column:4},end:{line:25,column:6}},"8":{start:{line:24,column:8},end:{line:24,column:39}},"9":{start:{line:27,column:4},end:{line:44,column:8}},"10":{start:{line:28,column:19},end:{line:28,column:49}},"11":{start:{line:29,column:19},end:{line:29,column:53}},"12":{start:{line:31,column:8},end:{line:31,column:78}},"13":{start:{line:31,column:19},end:{line:31,column:78}},"14":{start:{line:32,column:8},end:{line:32,column:74}},"15":{start:{line:32,column:19},end:{line:32,column:74}},"16":{start:{line:34,column:8},end:{line:34,column:181}},"17":{start:{line:34,column:43},end:{line:34,column:74}},"18":{start:{line:34,column:77},end:{line:34,column:181}},"19":{start:{line:40,column:26},end:{line:40,column:120}},"20":{start:{line:42,column:8},end:{line:42,column:86}},"21":{start:{line:43,column:8},end:{line:43,column:37}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:19,column:17},end:{line:19,column:18}},loc:{start:{line:19,column:39},end:{line:45,column:1}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:17},end:{line:23,column:18}},loc:{start:{line:23,column:25},end:{line:25,column:5}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:27,column:12},end:{line:27,column:13}},loc:{start:{line:27,column:24},end:{line:44,column:5}},line:27},"3":{name:"(anonymous_3)",decl:{start:{line:34,column:35},end:{line:34,column:36}},loc:{start:{line:34,column:43},end:{line:34,column:74}},line:34}},branchMap:{"0":{loc:{start:{line:31,column:8},end:{line:31,column:78}},type:"if",locations:[{start:{line:31,column:8},end:{line:31,column:78}},{start:{line:31,column:8},end:{line:31,column:78}}],line:31},"1":{loc:{start:{line:32,column:8},end:{line:32,column:74}},type:"if",locations:[{start:{line:32,column:8},end:{line:32,column:74}},{start:{line:32,column:8},end:{line:32,column:74}}],line:32},"2":{loc:{start:{line:34,column:8},end:{line:34,column:181}},type:"if",locations:[{start:{line:34,column:8},end:{line:34,column:181}},{start:{line:34,column:8},end:{line:34,column:181}}],line:34}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6cf0e681b963bc77f3d66c53ca66357dfb49eba4"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_nqdktuwv1=function(){return actualCoverage;};return actualCoverage;}cov_nqdktuwv1();const{validate}=(cov_nqdktuwv1().s[0]++,require('pill-o-clock-utils'));const{models:{User,Drug,Guideline}}=(cov_nqdktuwv1().s[1]++,require('pill-o-clock-data'));const{NotFoundError,NotAllowedError}=(cov_nqdktuwv1().s[2]++,require('pill-o-clock-errors'));/**
 * Add a prescription to user with the drug to take and the time(alarm) when the user have to take this drug 
 * 
 * @param {string} id user's unique id
 * 
 * @param {string} drugId the id of the drug to add to user prescription
 *
 * @param {array} time array of times in which alarms should trigger to inform the user to take the drug 
 *
 * @returns {Promise<undefined>} an empty Promise on a successful addition
 * 
 * @throws {NotFoundError} if the user or the drug does not exist
 */cov_nqdktuwv1().s[3]++;module.exports=(id,drugId,time)=>{cov_nqdktuwv1().f[0]++;cov_nqdktuwv1().s[4]++;validate.string(id,'id');cov_nqdktuwv1().s[5]++;validate.string(drugId,'drugId');cov_nqdktuwv1().s[6]++;validate.type(time,'times',Array);cov_nqdktuwv1().s[7]++;time.forEach(alarm=>{cov_nqdktuwv1().f[1]++;cov_nqdktuwv1().s[8]++;validate.stringOfNumbers(alarm);});cov_nqdktuwv1().s[9]++;return(async()=>{cov_nqdktuwv1().f[2]++;let user=(cov_nqdktuwv1().s[10]++,await User.findById(id).lean());let drug=(cov_nqdktuwv1().s[11]++,await Drug.findById(drugId).lean());cov_nqdktuwv1().s[12]++;if(!drug){cov_nqdktuwv1().b[0][0]++;cov_nqdktuwv1().s[13]++;throw new NotFoundError(`drug with id ${drugId} not found`);}else{cov_nqdktuwv1().b[0][1]++;}cov_nqdktuwv1().s[14]++;if(!user){cov_nqdktuwv1().b[1][0]++;cov_nqdktuwv1().s[15]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_nqdktuwv1().b[1][1]++;}cov_nqdktuwv1().s[16]++;if(user.prescription.find(drug=>{cov_nqdktuwv1().f[3]++;cov_nqdktuwv1().s[17]++;return drug.drug.toString()===drugId;})){cov_nqdktuwv1().b[2][0]++;cov_nqdktuwv1().s[18]++;throw new NotAllowedError(`user with id ${id} already have drug with id ${drugId} in his prescription`);}else{cov_nqdktuwv1().b[2][1]++;}// for (let i = 0; i < user.prescription.length; i++) {
//     if (user.prescription[i].drug.toString() === drugId) throw new NotAllowedError (`user with id ${id} already have drug with id ${drugId} in his prescription`)
// } 
const guideline=(cov_nqdktuwv1().s[19]++,new Guideline({created:new Date(),prescribed:user._id.toString(),drug:drugId,times:time}));cov_nqdktuwv1().s[20]++;await User.findByIdAndUpdate(user._id,{$push:{prescription:guideline}});cov_nqdktuwv1().s[21]++;return await guideline.save();})();};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1wcmVzY3JpcHRpb24uanMiXSwibmFtZXMiOlsidmFsaWRhdGUiLCJyZXF1aXJlIiwibW9kZWxzIiwiVXNlciIsIkRydWciLCJHdWlkZWxpbmUiLCJOb3RGb3VuZEVycm9yIiwiTm90QWxsb3dlZEVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsImlkIiwiZHJ1Z0lkIiwidGltZSIsInN0cmluZyIsInR5cGUiLCJBcnJheSIsImZvckVhY2giLCJhbGFybSIsInN0cmluZ09mTnVtYmVycyIsInVzZXIiLCJmaW5kQnlJZCIsImxlYW4iLCJkcnVnIiwicHJlc2NyaXB0aW9uIiwiZmluZCIsInRvU3RyaW5nIiwiZ3VpZGVsaW5lIiwiY3JlYXRlZCIsIkRhdGUiLCJwcmVzY3JpYmVkIiwiX2lkIiwidGltZXMiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsIiRwdXNoIiwic2F2ZSJdLCJtYXBwaW5ncyI6InkxR0FBQSxLQUFNLENBQUVBLFFBQUYsMEJBQWVDLE9BQU8sQ0FBQyxvQkFBRCxDQUF0QixDQUFOLENBQ0EsS0FBTSxDQUFFQyxNQUFNLENBQUUsQ0FBRUMsSUFBRixDQUFRQyxJQUFSLENBQWNDLFNBQWQsQ0FBViwwQkFBd0NKLE9BQU8sQ0FBQyxtQkFBRCxDQUEvQyxDQUFOLENBQ0EsS0FBTSxDQUFFSyxhQUFGLENBQWlCQyxlQUFqQiwwQkFBcUNOLE9BQU8sQ0FBQyxxQkFBRCxDQUE1QyxDQUFOLENBRUE7Ozs7Ozs7Ozs7OzswQkFjQU8sTUFBTSxDQUFDQyxPQUFQLENBQWlCLENBQUNDLEVBQUQsQ0FBS0MsTUFBTCxDQUFhQyxJQUFiLEdBQXNCLCtDQUNuQ1osUUFBUSxDQUFDYSxNQUFULENBQWdCSCxFQUFoQixDQUFvQixJQUFwQixFQURtQyx1QkFFbkNWLFFBQVEsQ0FBQ2EsTUFBVCxDQUFnQkYsTUFBaEIsQ0FBd0IsUUFBeEIsRUFGbUMsdUJBR25DWCxRQUFRLENBQUNjLElBQVQsQ0FBY0YsSUFBZCxDQUFvQixPQUFwQixDQUE2QkcsS0FBN0IsRUFIbUMsdUJBSW5DSCxJQUFJLENBQUNJLE9BQUwsQ0FBYUMsS0FBSyxFQUFHLCtDQUNqQmpCLFFBQVEsQ0FBQ2tCLGVBQVQsQ0FBeUJELEtBQXpCLEVBQ0gsQ0FGRCxFQUptQyx1QkFRbkMsTUFBTyxDQUFDLFNBQVksd0JBQ2hCLEdBQUlFLENBQUFBLElBQUksMEJBQUcsS0FBTWhCLENBQUFBLElBQUksQ0FBQ2lCLFFBQUwsQ0FBY1YsRUFBZCxFQUFrQlcsSUFBbEIsRUFBVCxDQUFSLENBQ0EsR0FBSUMsQ0FBQUEsSUFBSSwwQkFBRyxLQUFNbEIsQ0FBQUEsSUFBSSxDQUFDZ0IsUUFBTCxDQUFjVCxNQUFkLEVBQXNCVSxJQUF0QixFQUFULENBQVIsQ0FGZ0Isd0JBSWhCLEdBQUksQ0FBQ0MsSUFBTCxDQUFXLHdEQUFNLElBQUloQixDQUFBQSxhQUFKLENBQW1CLGdCQUFlSyxNQUFPLFlBQXpDLENBQU4sQ0FBMkQsQ0FBdEUsZ0NBSmdCLHdCQUtoQixHQUFJLENBQUNRLElBQUwsQ0FBVyx3REFBTSxJQUFJYixDQUFBQSxhQUFKLENBQW1CLGdCQUFlSSxFQUFHLFlBQXJDLENBQU4sQ0FBdUQsQ0FBbEUsZ0NBTGdCLHdCQU9oQixHQUFJUyxJQUFJLENBQUNJLFlBQUwsQ0FBa0JDLElBQWxCLENBQXVCRixJQUFJLEVBQUksc0RBQUFBLENBQUFBLElBQUksQ0FBQ0EsSUFBTCxDQUFVRyxRQUFWLEtBQXlCZCxNQUF6QixDQUErQixDQUE5RCxDQUFKLENBQXFFLHdEQUFNLElBQUlKLENBQUFBLGVBQUosQ0FBc0IsZ0JBQWVHLEVBQUcsOEJBQTZCQyxNQUFPLHNCQUE1RSxDQUFOLENBQXdHLENBQTdLLGdDQUVBO0FBQ0E7QUFDQTtBQUVBLEtBQU1lLENBQUFBLFNBQVMsMEJBQUcsR0FBSXJCLENBQUFBLFNBQUosQ0FBYyxDQUFDc0IsT0FBTyxDQUFFLEdBQUlDLENBQUFBLElBQUosRUFBVixDQUFvQkMsVUFBVSxDQUFFVixJQUFJLENBQUNXLEdBQUwsQ0FBU0wsUUFBVCxFQUFoQyxDQUFxREgsSUFBSSxDQUFFWCxNQUEzRCxDQUFtRW9CLEtBQUssQ0FBRW5CLElBQTFFLENBQWQsQ0FBSCxDQUFmLENBYmdCLHdCQWVoQixLQUFNVCxDQUFBQSxJQUFJLENBQUM2QixpQkFBTCxDQUF1QmIsSUFBSSxDQUFDVyxHQUE1QixDQUFpQyxDQUFFRyxLQUFLLENBQUUsQ0FBRVYsWUFBWSxDQUFFRyxTQUFoQixDQUFULENBQWpDLENBQU4sQ0FmZ0Isd0JBZ0JoQixNQUFPLE1BQU1BLENBQUFBLFNBQVMsQ0FBQ1EsSUFBVixFQUFiLENBQ0gsQ0FqQk0sR0FBUCxDQWtCSCxDQTFCRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgdmFsaWRhdGUgfSA9IHJlcXVpcmUoJ3BpbGwtby1jbG9jay11dGlscycpXG5jb25zdCB7IG1vZGVsczogeyBVc2VyLCBEcnVnLCBHdWlkZWxpbmUgfSB9ID0gcmVxdWlyZSgncGlsbC1vLWNsb2NrLWRhdGEnKVxuY29uc3QgeyBOb3RGb3VuZEVycm9yLCBOb3RBbGxvd2VkRXJyb3IgfSA9IHJlcXVpcmUoJ3BpbGwtby1jbG9jay1lcnJvcnMnKVxuXG4vKipcbiAqIEFkZCBhIHByZXNjcmlwdGlvbiB0byB1c2VyIHdpdGggdGhlIGRydWcgdG8gdGFrZSBhbmQgdGhlIHRpbWUoYWxhcm0pIHdoZW4gdGhlIHVzZXIgaGF2ZSB0byB0YWtlIHRoaXMgZHJ1ZyBcbiAqIFxuICogQHBhcmFtIHtzdHJpbmd9IGlkIHVzZXIncyB1bmlxdWUgaWRcbiAqIFxuICogQHBhcmFtIHtzdHJpbmd9IGRydWdJZCB0aGUgaWQgb2YgdGhlIGRydWcgdG8gYWRkIHRvIHVzZXIgcHJlc2NyaXB0aW9uXG4gKlxuICogQHBhcmFtIHthcnJheX0gdGltZSBhcnJheSBvZiB0aW1lcyBpbiB3aGljaCBhbGFybXMgc2hvdWxkIHRyaWdnZXIgdG8gaW5mb3JtIHRoZSB1c2VyIHRvIHRha2UgdGhlIGRydWcgXG4gKlxuICogQHJldHVybnMge1Byb21pc2U8dW5kZWZpbmVkPn0gYW4gZW1wdHkgUHJvbWlzZSBvbiBhIHN1Y2Nlc3NmdWwgYWRkaXRpb25cbiAqIFxuICogQHRocm93cyB7Tm90Rm91bmRFcnJvcn0gaWYgdGhlIHVzZXIgb3IgdGhlIGRydWcgZG9lcyBub3QgZXhpc3RcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IChpZCwgZHJ1Z0lkLCB0aW1lKSA9PiB7ICBcbiAgICB2YWxpZGF0ZS5zdHJpbmcoaWQsICdpZCcpXG4gICAgdmFsaWRhdGUuc3RyaW5nKGRydWdJZCwgJ2RydWdJZCcpXG4gICAgdmFsaWRhdGUudHlwZSh0aW1lLCAndGltZXMnLCBBcnJheSlcbiAgICB0aW1lLmZvckVhY2goYWxhcm0gPT57XG4gICAgICAgIHZhbGlkYXRlLnN0cmluZ09mTnVtYmVycyhhbGFybSlcbiAgICB9KVxuXG4gICAgcmV0dXJuIChhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCB1c2VyID0gYXdhaXQgVXNlci5maW5kQnlJZChpZCkubGVhbigpXG4gICAgICAgIGxldCBkcnVnID0gYXdhaXQgRHJ1Zy5maW5kQnlJZChkcnVnSWQpLmxlYW4oKVxuICAgIFxuICAgICAgICBpZiAoIWRydWcpIHRocm93IG5ldyBOb3RGb3VuZEVycm9yKGBkcnVnIHdpdGggaWQgJHtkcnVnSWR9IG5vdCBmb3VuZGApXG4gICAgICAgIGlmICghdXNlcikgdGhyb3cgbmV3IE5vdEZvdW5kRXJyb3IoYHVzZXIgd2l0aCBpZCAke2lkfSBub3QgZm91bmRgKVxuICAgIFxuICAgICAgICBpZiAodXNlci5wcmVzY3JpcHRpb24uZmluZChkcnVnID0+IGRydWcuZHJ1Zy50b1N0cmluZygpID09PSBkcnVnSWQpKSB0aHJvdyBuZXcgTm90QWxsb3dlZEVycm9yIChgdXNlciB3aXRoIGlkICR7aWR9IGFscmVhZHkgaGF2ZSBkcnVnIHdpdGggaWQgJHtkcnVnSWR9IGluIGhpcyBwcmVzY3JpcHRpb25gKVxuICAgIFxuICAgICAgICAvLyBmb3IgKGxldCBpID0gMDsgaSA8IHVzZXIucHJlc2NyaXB0aW9uLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vICAgICBpZiAodXNlci5wcmVzY3JpcHRpb25baV0uZHJ1Zy50b1N0cmluZygpID09PSBkcnVnSWQpIHRocm93IG5ldyBOb3RBbGxvd2VkRXJyb3IgKGB1c2VyIHdpdGggaWQgJHtpZH0gYWxyZWFkeSBoYXZlIGRydWcgd2l0aCBpZCAke2RydWdJZH0gaW4gaGlzIHByZXNjcmlwdGlvbmApXG4gICAgICAgIC8vIH0gXG4gICAgXG4gICAgICAgIGNvbnN0IGd1aWRlbGluZSA9IG5ldyBHdWlkZWxpbmUoe2NyZWF0ZWQ6IG5ldyBEYXRlLCBwcmVzY3JpYmVkOiB1c2VyLl9pZC50b1N0cmluZygpLCBkcnVnOiBkcnVnSWQsIHRpbWVzOiB0aW1lfSlcbiAgICBcbiAgICAgICAgYXdhaXQgVXNlci5maW5kQnlJZEFuZFVwZGF0ZSh1c2VyLl9pZCwgeyAkcHVzaDogeyBwcmVzY3JpcHRpb246IGd1aWRlbGluZSB9IH0pXG4gICAgICAgIHJldHVybiBhd2FpdCBndWlkZWxpbmUuc2F2ZSgpICAgXG4gICAgfSkoKVxufSJdfQ==